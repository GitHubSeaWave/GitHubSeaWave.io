[{"categories":["各种笔记"],"content":"·什么是MyBatis？ ","date":"2021-12-05","objectID":"/mybatis/:1:0","tags":null,"title":"MyBatis使用教程","uri":"/mybatis/"},{"categories":["各种笔记"],"content":"1.MyBatis介绍 MyBatis 是一款优秀的持久层框架，它支持定制化 SQL、存储过程以及高级映射。MyBatis 避免 了几乎所有的 JDBC 代码和手动设置参数以及获取结果集。MyBatis 可以使用简单的 XML 或注 解来配置和映射原生信息，将接口和 Java 的 POJOs(Plain Ordinary Java Object,普通的 Java对 象)映射成数据库中的记录。 ","date":"2021-12-05","objectID":"/mybatis/:1:1","tags":null,"title":"MyBatis使用教程","uri":"/mybatis/"},{"categories":["各种笔记"],"content":"2.如何获取MyBatis有关的信息？ MyBatis官方文档：https://mybatis.org/mybatis-3/ MyBatis项目地址：https://github.com/mybatis/mybatis-3/ Maven中央仓库：https://mvnrepository.com/ ","date":"2021-12-05","objectID":"/mybatis/:1:2","tags":null,"title":"MyBatis使用教程","uri":"/mybatis/"},{"categories":["各种笔记"],"content":"MyBatis的安装 ","date":"2021-12-05","objectID":"/mybatis/:2:0","tags":null,"title":"MyBatis使用教程","uri":"/mybatis/"},{"categories":["各种笔记"],"content":"方式一：在idea中配置MyBatis 首先创建一个maven项目，然后在pom.xml中添加依赖列表： \u003cdependency\u003e \u003cgroupId\u003eorg.mybatis\u003c/groupId\u003e \u003cartifactId\u003emybatis\u003c/artifactId\u003e \u003cversion\u003e3.5.2\u003c/version\u003e \u003c/dependency\u003e ","date":"2021-12-05","objectID":"/mybatis/:2:1","tags":null,"title":"MyBatis使用教程","uri":"/mybatis/"},{"categories":["各种笔记"],"content":"方式二：手动导入jar包 点击此处在github上下载jar包，解压后放入导入idea项目即可 ","date":"2021-12-05","objectID":"/mybatis/:2:2","tags":null,"title":"MyBatis使用教程","uri":"/mybatis/"},{"categories":["各种笔记"],"content":"MyBatis的使用（idea+maven） ","date":"2021-12-05","objectID":"/mybatis/:3:0","tags":null,"title":"MyBatis使用教程","uri":"/mybatis/"},{"categories":["各种笔记"],"content":"1.在你的资源目录创建mybatis-config.xml配置文件（构建 SqlSessionFactory） \u003c?xml version=\"1.0\" encoding=\"UTF-8\" ?\u003e \u003c!DOCTYPE configuration PUBLIC \"-//mybatis.org//DTD Config 3.0//EN\" \"http://mybatis.org/dtd/mybatis-3-config.dtd\"\u003e \u003cconfiguration\u003e \u003cenvironments default=\"development\"\u003e \u003cenvironment id=\"development\"\u003e \u003ctransactionManager type=\"JDBC\"/\u003e \u003cdataSource type=\"POOLED\"\u003e \u003cproperty name=\"driver\" value=\"${driver}\"/\u003e \u003cproperty name=\"url\" value=\"${url}\"/\u003e \u003cproperty name=\"username\" value=\"${username}\"/\u003e \u003cproperty name=\"password\" value=\"${password}\"/\u003e \u003c/dataSource\u003e \u003c/environment\u003e \u003c/environments\u003e \u003cmappers\u003e \u003cmapper resource=\"org/mybatis/example/BlogMapper.xml\"/\u003e \u003c/mappers\u003e \u003c/configuration\u003e 其中需要注意的是： driver项的值需要改为具体的数据库驱动全类名。 url，username，password需要根据实际情况进行更改。 mapper中resource指向sql语句列表，这一项后面会提及。 ","date":"2021-12-05","objectID":"/mybatis/:3:1","tags":null,"title":"MyBatis使用教程","uri":"/mybatis/"},{"categories":["各种笔记"],"content":"2.从 SqlSessionFactory 中获取 SqlSession //创建工厂 String resource = \"org/mybatis/example/mybatis-config.xml\"; InputStream inputStream = Resources.getResourceAsStream(resource); SqlSessionFactory sqlSessionFactory = new SqlSessionFactoryBuilder().build(inputStream); //从工厂中获取sqlSession try (SqlSession session = sqlSessionFactory.openSession()) { BlogMapper mapper = session.getMapper(BlogMapper.class); Blog blog = mapper.selectBlog(101); } ","date":"2021-12-05","objectID":"/mybatis/:3:2","tags":null,"title":"MyBatis使用教程","uri":"/mybatis/"},{"categories":["各种笔记"],"content":"3.SQL语句映射 \u003c?xml version=\"1.0\" encoding=\"UTF-8\" ?\u003e \u003c!DOCTYPE mapper PUBLIC \"-//mybatis.org//DTD Mapper 3.0//EN\" \"http://mybatis.org/dtd/mybatis-3-mapper.dtd\"\u003e \u003cmapper namespace=\"org.mybatis.example.BlogMapper\"\u003e \u003cselect id=\"selectBlog\" resultType=\"Blog\"\u003e select * from Blog where id = #{id} \u003c/select\u003e \u003c/mapper\u003e 在上述代码中我们需要更改以下几项： namespace:他指向你所需要映射的java接口 id:映射方法的名称 resultType指明返回类型 不可或缺的是，我们需要更改查询语句。 ","date":"2021-12-05","objectID":"/mybatis/:3:3","tags":null,"title":"MyBatis使用教程","uri":"/mybatis/"},{"categories":["各种笔记"],"content":"4.ResultMap结果集映射 当数据库字段名和属性名不一致时，会导致实体类中的属性值为null，例子如下： //实体类的属性如下： class user{ int name; int password; } //接口方法 void getUser(); \u003c!--mapper中的查询语句如下--\u003e \u003cselect id=\"getUser\" type=com.example.User\u003e select * name,pwd from users \u003c/select\u003e 此时返回的User类中的password属性值为null，对于这个问题我们可以在mapper配置文件中添加resultMap标签来解决。 \u003c!--mapper中的查询语句如下--\u003e \u003cselect id=\"getUser\" resultmap=com.example.User\u003e select * name,pwd from users \u003c/select\u003e \u003c!--新增resultMap标签--\u003e \u003cresultMap id=\"UserMap\" type=\"User\"\u003e \u003c!--column表示数据库中的字段，property表示实体类中的属性 --\u003e \u003cresult column=\"name\" property=\"name\"/\u003e \u003cresult column=\"pwd\" property=\"password\"/\u003e \u003c/resultMap\u003e ","date":"2021-12-05","objectID":"/mybatis/:3:4","tags":null,"title":"MyBatis使用教程","uri":"/mybatis/"},{"categories":["各种笔记"],"content":"5.多对一的处理 在实际查询数据库的过程中，大概率会遇到多对一的情况，比如多个学生对应一个老师，我们查询寻学生时需要连同老师一起查询，这时我们需要对结果集做一些修改。 例子： //实体类的属性如下： class Student{ int id; String name; Teacher teacher } //接口方法 void getStudent(); 很明显 以上User类中的Teacher属性是一个复杂类型，所以我们需要单独处理。 方法一 类似于子查询的方法 \u003cselect id = \"getStudent\" resultMap=\"StudentTeacher\"\u003e select * from student \u003c/select\u003e \u003cresultMap id =\"StudentTeacher\" type=\"Student\"\u003e \u003cresult property=\"id\" colum=\"id\"/\u003e \u003cresult property=\"name\"colum=\"name\"/\u003e \u003c!-- 复杂的属性，单独处理。对象：association 集合：collection --\u003e \u003cassociation property=\"teacher\" colum=\"tid\" javaType=\"Teacher\" select=\"getTcher\"/\u003e \u003c!--单独查询Teacher的语句--\u003e \u003cselect id=\"getTeacher\" resultType=\"Teacher\"\u003e select * from teacher where id=#{id} \u003c/select\u003e \u003c/result\u003e 方法二 按照结果嵌套处理 \u003cselect id=\"getStudent\" resultMap=\"StudentTeacher\"\u003e select s.id sid,s.name sname,t.name tname from student s,teacher t where s.tid = t.id \u003c/select\u003e \u003cresultMap id=\"StudentTeacher2\" type =\"Student\"\u003e \u003cresult property=\"id\" column=\"sid\"/\u003e \u003cresult property=\"name\" column=\"sname\"/\u003e \u003cassociation property=\"teacher\" javaType=\"Teacher\"\u003e \u003cresult property=\"name\" column=\"tname\"/\u003e \u003c/association\u003e \u003c/resultMap\u003e ","date":"2021-12-05","objectID":"/mybatis/:3:5","tags":null,"title":"MyBatis使用教程","uri":"/mybatis/"},{"categories":["各种笔记"],"content":"6. 一对多的处理 与多对一相反,我们会遇到一对多的情况,比如说一个老师对应多个老师,所以我们同样需要对结果集进行处理. 例子: //实体类 public class Teacher{ private int id; private String name; private List\u003cStudent\u003e students; } //接口方法 class TeacherMapper{ Teacher getTeacher(int id); } \u003cselect id=\"getTeacher\" resultMapper=\"\"\u003e select s.id sid,s.name sname,t.name tname from student s,teacher t where s.tid = t.id and t.id=#{tid} \u003c/select\u003e \u003cresultMap id=\"TeacherStudent\" type =\"Teacher\"\u003e \u003cresult property=\"id\" column=\"sid\"/\u003e \u003cresult property=\"name\" column=\"sname\"/\u003e \u003ccollection property=\"teacher\" TypeOf=\"Stident\"\u003e \u003cresult property=\"id\" column=\"sid\"/\u003e \u003cresult property=\"name\" column=\"sname\"/\u003e \u003cresult property=\"tid\" column=\"tid\"/\u003e \u003c/association\u003e \u003c/resultMap\u003e ","date":"2021-12-05","objectID":"/mybatis/:3:6","tags":null,"title":"MyBatis使用教程","uri":"/mybatis/"},{"categories":["各种笔记"],"content":"Markdown简介 Markdown是一种轻量级标记语言，它允许人们使用易读易写的纯文本格式编写文档。 Markdown 语言在 2004 由约翰·格鲁伯（英语：John Gruber）创建。 Markdown 编写的文档可以导出 HTML 、Word、图像、PDF、Epub 等多种格式的文档。 Markdown 编写的文档后缀为 .md, .markdown。 来自：百度百科 ","date":"2021-07-02","objectID":"/markdown_basics_guide/:1:0","tags":null,"title":"MarkDown基础语法指北","uri":"/markdown_basics_guide/"},{"categories":["各种笔记"],"content":"一、Markdown标题 ","date":"2021-07-02","objectID":"/markdown_basics_guide/:2:0","tags":null,"title":"MarkDown基础语法指北","uri":"/markdown_basics_guide/"},{"categories":["各种笔记"],"content":"1.使用 = 和 - 标记 我展示的是一级标题 ================= 我展示的是二级标题 显示效果如下： ","date":"2021-07-02","objectID":"/markdown_basics_guide/:2:1","tags":null,"title":"MarkDown基础语法指北","uri":"/markdown_basics_guide/"},{"categories":["各种笔记"],"content":"2.使用#号标记 用#号标记标题时要注意#号与标题文本中间的空格 # 一级标题 ## 二级标题 ### 三级标题 ##### 四级标题 ###### 五级标题 ####### 六级标题 ","date":"2021-07-02","objectID":"/markdown_basics_guide/:2:2","tags":null,"title":"MarkDown基础语法指北","uri":"/markdown_basics_guide/"},{"categories":["各种笔记"],"content":"二、Markdown段落 ","date":"2021-07-02","objectID":"/markdown_basics_guide/:3:0","tags":null,"title":"MarkDown基础语法指北","uri":"/markdown_basics_guide/"},{"categories":["各种笔记"],"content":"1.段落分段 Markdown 段落没有特殊的格式，直接编写文字就好，段落的换行是使用两个以上空格加上回车。 ","date":"2021-07-02","objectID":"/markdown_basics_guide/:3:1","tags":null,"title":"MarkDown基础语法指北","uri":"/markdown_basics_guide/"},{"categories":["各种笔记"],"content":"2.字体格式 Markdown可以使用如下字体格式： 斜体文本 —文字首末分别使用一*包围文本 斜体文本 —文字首末分别使用一个_包围文本 粗体文本 —文字首末分别使用两个*包围文本 粗体文本 —文字首末分别使用两个_包围文本 删除文本 —文字首末分别使用两个~包围文本 ","date":"2021-07-02","objectID":"/markdown_basics_guide/:3:2","tags":null,"title":"MarkDown基础语法指北","uri":"/markdown_basics_guide/"},{"categories":["各种笔记"],"content":"3.分隔线 你可以在一行中用三个以上的星号、减号、底线来建立一个分隔线，行内不能有其他东西。你也可以在星号或是减号中间插入空格。下面每种写法都可以建立分隔线： *** * * * ***** - - - ----- 显示效果如下： ","date":"2021-07-02","objectID":"/markdown_basics_guide/:3:3","tags":null,"title":"MarkDown基础语法指北","uri":"/markdown_basics_guide/"},{"categories":["各种笔记"],"content":"4. 下划线 下划线可以通过 HTML 的 标签来实现： \u003cu\u003e带下划线的文本\u003c/u\u003e 效果如下： ","date":"2021-07-02","objectID":"/markdown_basics_guide/:3:4","tags":null,"title":"MarkDown基础语法指北","uri":"/markdown_basics_guide/"},{"categories":["各种笔记"],"content":"5.脚注 创建脚注格式类似这样 [^1]。 ","date":"2021-07-02","objectID":"/markdown_basics_guide/:3:5","tags":null,"title":"MarkDown基础语法指北","uri":"/markdown_basics_guide/"},{"categories":["各种笔记"],"content":"三、Markdown列表 ","date":"2021-07-02","objectID":"/markdown_basics_guide/:4:0","tags":null,"title":"MarkDown基础语法指北","uri":"/markdown_basics_guide/"},{"categories":["各种笔记"],"content":"1.无序列表 无序列表使用星号()、加号(+)或是减号(-*)作为列表标记，这些标记后面要添加一个空格，然后再填写内容： * 第一项 * 第二项 * 第三项 + 第一项 + 第二项 + 第三项 - 第一项 - 第二项 - 第三项 效果如下： ","date":"2021-07-02","objectID":"/markdown_basics_guide/:4:1","tags":null,"title":"MarkDown基础语法指北","uri":"/markdown_basics_guide/"},{"categories":["各种笔记"],"content":"2.有序列表 有序列表使用数字标记，后面同样需要加一个空格在填写内容： 1. 第一项 2. 第二项 3. 第三项 效果如下： ","date":"2021-07-02","objectID":"/markdown_basics_guide/:4:2","tags":null,"title":"MarkDown基础语法指北","uri":"/markdown_basics_guide/"},{"categories":["各种笔记"],"content":"3.列表嵌套 列表是可以嵌套的，达到分级效果。 1. 第一项： - 第一项嵌套的第一个元素 - 第一项嵌套的第二个元素 2. 第二项： - 第二项嵌套的第一个元素 - 第二项嵌套的第二个元素 效果如下： ","date":"2021-07-02","objectID":"/markdown_basics_guide/:4:3","tags":null,"title":"MarkDown基础语法指北","uri":"/markdown_basics_guide/"},{"categories":["各种笔记"],"content":"四、Markdown区块 ","date":"2021-07-02","objectID":"/markdown_basics_guide/:5:0","tags":null,"title":"MarkDown基础语法指北","uri":"/markdown_basics_guide/"},{"categories":["各种笔记"],"content":"1.普通区块 Markdown 区块引用是在段落开头使用 \u003e 符号 ，然后后面紧跟一个空格符号： \u003e Markdown \u003e 我们都有一个家 \u003e 名字叫中国 效果如下: ","date":"2021-07-02","objectID":"/markdown_basics_guide/:5:1","tags":null,"title":"MarkDown基础语法指北","uri":"/markdown_basics_guide/"},{"categories":["各种笔记"],"content":"2.区块嵌套 区块是可以嵌套的，一个 \u003e 符号是最外层，两个 \u003e 符号是第一层嵌套，以此类推： \u003e 最外层 \u003e \u003e 第一层嵌套 \u003e \u003e \u003e 第二层嵌套 区块也可以和列表互相嵌套： * 第一项 \u003e 区块列表 \u003e 区块列表的嵌套 * 第二项 效果如下： ","date":"2021-07-02","objectID":"/markdown_basics_guide/:5:2","tags":null,"title":"MarkDown基础语法指北","uri":"/markdown_basics_guide/"},{"categories":["各种笔记"],"content":"五、Markdown 代码 ","date":"2021-07-02","objectID":"/markdown_basics_guide/:6:0","tags":null,"title":"MarkDown基础语法指北","uri":"/markdown_basics_guide/"},{"categories":["各种笔记"],"content":"1.代码片段 如果是段落上的一个函数或片段的代码可以用反引号把它包起来（`），例如： `System.out.println(Markdown)` 效果如下： ","date":"2021-07-02","objectID":"/markdown_basics_guide/:6:1","tags":null,"title":"MarkDown基础语法指北","uri":"/markdown_basics_guide/"},{"categories":["各种笔记"],"content":"2.代码区块 代码区块用 ``` 包裹一段代码，并指定一种语言（也可以不指定）： ​```javascript $(document).ready(function () { alert('RUNOOB'); }); ​``` 效果如下： ","date":"2021-07-02","objectID":"/markdown_basics_guide/:6:2","tags":null,"title":"MarkDown基础语法指北","uri":"/markdown_basics_guide/"},{"categories":["各种笔记"],"content":"六、Markdown 链接 ","date":"2021-07-02","objectID":"/markdown_basics_guide/:7:0","tags":null,"title":"MarkDown基础语法指北","uri":"/markdown_basics_guide/"},{"categories":["各种笔记"],"content":"1.超链接 链接使用方法如下： 欢迎来到我的博客 [点击进入](https://seawave.top) 效果如下： 欢迎来到我的博客 点击进入 ","date":"2021-07-02","objectID":"/markdown_basics_guide/:7:1","tags":null,"title":"MarkDown基础语法指北","uri":"/markdown_basics_guide/"},{"categories":["各种笔记"],"content":"2.高级链接 我们可以通过变量来设置一个链接，变量赋值在文档末尾进行： 此方法可以使用在需要大量引用同一网址的文档中。 点击进入 [Google][1] 点击进入 [seawave][2] 然后在文档的结尾为变量赋值（网址） [1]: http://www.google.com/ [2]: http://www.seawave.com/ 效果如下： 点击进入 Google 点击进入 seawave 然后在文档的结尾为变量赋值（网址） ","date":"2021-07-02","objectID":"/markdown_basics_guide/:7:2","tags":null,"title":"MarkDown基础语法指北","uri":"/markdown_basics_guide/"},{"categories":["各种笔记"],"content":"七、Markdown 图片 Markdown 图片语法格式如下： ![alt 属性文本](图片地址) ![alt 属性文本](图片地址 \"可选标题\") 使用举例： ![Baidu 图标](https://www.baidu.com/img/540x258_2179d1243e6c5320a8dcbecd834a025d.png) ![Baidu 图标](https://www.baidu.com/img/540x258_2179d1243e6c5320a8dcbecd834a025d.png \"100years\") 效果如下: 100yearsBaidu 图标 \"\r100years\r 当然，你也可以像网址那样对图片网址使用变量: 这个链接用 1 作为网址变量 [Gitee][1]. 然后在文档的结尾为变量赋值（网址） [1]: https://gitee.com/static/images/logo-black.svg 效果如下： 这个链接用 1 作为网址变量 Gitee. 然后在文档的结尾为变量赋值（网址） ","date":"2021-07-02","objectID":"/markdown_basics_guide/:8:0","tags":null,"title":"MarkDown基础语法指北","uri":"/markdown_basics_guide/"},{"categories":["各种笔记"],"content":"八、Markdown 表格 Markdown 制作表格使用 | 来分隔不同的单元格，使用 - 来分隔表头和其他行。 语法格式如下： | 表头 | 表头 | | ---- | ---- | | 单元格 | 单元格 | | 单元格 | 单元格 | 表头 表头 单元格 单元格 单元格 单元格 我们可以设置表格的对齐方式： -: 设置内容和标题栏居右对齐。 :- 设置内容和标题栏居左对齐。 :-: 设置内容和标题栏居中对齐。 实例如下： | 左对齐 | 右对齐 | 居中对齐 | | :-----| ----: | :----: | | 单元格 | 单元格 | 单元格 | | 单元格 | 单元格 | 单元格 | 左对齐 右对齐 居中对齐 单元格 单元格 单元格 单元格 单元格 单元格 ","date":"2021-07-02","objectID":"/markdown_basics_guide/:9:0","tags":null,"title":"MarkDown基础语法指北","uri":"/markdown_basics_guide/"},{"categories":["Windows小技巧"],"content":"SakuraFrp简介 SakuraFrp是目前市面上少有的免费内网穿透平台，可以用于个人搭建服务器和做一些应用的流量穿透。花生壳虽然也有免费的，但是带宽和流量都有很大限制，SakuraFrp免费用户就可提供10Mbps和6GB的流量相比之下这个平台算是比较良心的了。 点此处进入Sakura官网 ","date":"2021-01-12","objectID":"/remote-desktop/:1:0","tags":null,"title":"通过SakuraFrp进行远程桌面连接","uri":"/remote-desktop/"},{"categories":["Windows小技巧"],"content":"连接端和被链接端准备 这里我们以win10 20H2版本做演示 1.按WIN+R打开运行窗口 2.在运行窗口输入 SystemPropertiesRemote 3.在远程协助中勾选 允许远程协助链接这台计算机 在远程桌面中选择 允许远程连接到此计算机 4.确定。到此配置完毕。 ","date":"2021-01-12","objectID":"/remote-desktop/:2:0","tags":null,"title":"通过SakuraFrp进行远程桌面连接","uri":"/remote-desktop/"},{"categories":["Windows小技巧"],"content":"创建SakuraFrp隧道 1.注册账号 2.创建隧道： 节点最好是选国内的，联通还是电信根据你自己的网络环境来选。 隧道名称随意，取一个你自己能分辨的就行 隧道类型 选TCP 本地地址填127.0.0.1 本地端口填3389（windows远程连接的端口号） 远程端口留空即可 4.单击确认创建，完成创建。 ","date":"2021-01-12","objectID":"/remote-desktop/:3:0","tags":null,"title":"通过SakuraFrp进行远程桌面连接","uri":"/remote-desktop/"},{"categories":["Windows小技巧"],"content":"连接隧道 1.下载Sakura客户端。单击下载 无法下载可以在主页点击软件下载手动选择windows客户端。 2.打开客户端并登录 （可以选择开机自启这样每次开机会自动连接到隧道） 3.点击隧道，可以看到我们刚刚创建的隧道。 4.点击启动开关启动隧道，这样你的电脑就成功连接到了sakura服务器。电脑右下角会给出一个通知，提示连接方式。 来不及保存的话可以点击软件左侧的日志选项，里面会写出你连接到你电脑所需的IP和端口号。 5.保存所提示的IP或域名，选择其中一种即可。 ","date":"2021-01-12","objectID":"/remote-desktop/:4:0","tags":null,"title":"通过SakuraFrp进行远程桌面连接","uri":"/remote-desktop/"},{"categories":["Windows小技巧"],"content":"在其他电脑上连接到你的电脑 1.打开远程连接工具。 第1种方法：win+r打开运行窗口，输入mstsc。 第2种方法：单击开始菜单，在附件中找到远程桌面连接。 2.输入你的ip:端口。 3.完成你的连接。 ","date":"2021-01-12","objectID":"/remote-desktop/:5:0","tags":null,"title":"通过SakuraFrp进行远程桌面连接","uri":"/remote-desktop/"},{"categories":null,"content":"欢迎来到Seawave的博客 ","date":"2020-12-03","objectID":"/my-first-post/:0:1","tags":null,"title":"My First Blog","uri":"/my-first-post/"},{"categories":null,"content":"  LoveIt is a clean, elegant but advanced blog theme for Hugo developed by Dillon. It is based on the original LeaveIt Theme and KeepIt Theme. Hugo Theme LoveItHugo Theme LoveIt \"\rHugo Theme LoveIt\r ","date":"2019-08-02","objectID":"/about/:0:0","tags":null,"title":"About LoveIt","uri":"/about/"},{"categories":null,"content":"Features Performance and SEO  Optimized for performance: 99/100 on mobile and 100/100 on desktop in Google PageSpeed Insights  Optimized SEO performance with a correct SEO SCHEMA based on JSON-LD  Google Analytics supported  Fathom Analytics supported  Search engine verification supported (Google, Bind, Yandex and Baidu)  CDN for third-party libraries supported  Automatically converted images with Lazy Load by lazysizes Appearance and Layout / Responsive layout / Light/Dark mode  Globally consistent design language  Pagination supported  Easy-to-use and self-expanding table of contents  Multilanguage supported and i18n ready  Beautiful CSS animation Social and Comment Systems  Gravatar supported by Gravatar  Local Avatar supported  Up to 64 social links supported  Up to 28 share sites supported  Disqus comment system supported by Disqus  Gitalk comment system supported by Gitalk  Valine comment system supported by Valine  Facebook comments system supported by Facebook  Telegram comments system supported by Comments  Commento comment system supported by Commento  Utterances comment system supported by Utterances Extended Features  Search supported by Lunr.js or algolia  Twemoji supported  Automatically highlighting code  Copy code to clipboard with one click  Images gallery supported by lightgallery.js  Extended Markdown syntax for Font Awesome icons  Extended Markdown syntax for ruby annotation  Extended Markdown syntax for fraction  Mathematical formula supported by $ \\KaTeX $  Diagrams shortcode supported by mermaid  Interactive data visualization shortcode supported by ECharts  Mapbox shortcode supported by Mapbox GL JS  Music player shortcode supported by APlayer and MetingJS  Bilibili player shortcode  Kinds of admonitions shortcode  Custom style shortcode  Custom script shortcode  Animated typing supported by TypeIt  Dynamic scroll supported by Smooth Scroll  Cookie consent banner supported by cookieconsent … ","date":"2019-08-02","objectID":"/about/:0:1","tags":null,"title":"About LoveIt","uri":"/about/"},{"categories":null,"content":"License LoveIt is licensed under the MIT license. Check the LICENSE file for details. Thanks to the authors of following resources included in the theme: normalize.css Font Awesome Simple Icons Animate.css Smooth Scroll autocomplete.js Lunr.js algoliasearch lazysizes object-fit-images Twemoji lightgallery.js clipboard.js Sharer.js TypeIt $ \\KaTeX $ mermaid ECharts Mapbox GL JS APlayer MetingJS Gitalk Valine cookieconsent ","date":"2019-08-02","objectID":"/about/:0:2","tags":null,"title":"About LoveIt","uri":"/about/"}]